/**
 * Тип, представляющий режим сборки.
 * Может принимать значение 'production' для финальной сборки
 * или 'development' для разработки.
 */
export type BuildMode = "production" | "development";

/**
 * Интерфейс, представляющий пути к основным директориям и файлам, необходимым для сборки проекта.
 */
export interface BuildPaths {
  /**
   * Путь к основному файлу входа, который Webpack будет использовать в качестве отправной точки для сборки.
   */
  entry: string;
  /**
   * Директория, в которую будет сохраняться результат сборки.
   */
  build: string;
  /**
   * Путь к HTML-шаблону, который будет использоваться Webpack для генерации конечного HTML-файла.
   */
  html: string;
}

/**
 * Интерфейс, представляющий переменные окружения для сборки.
 */
export interface BuildEnv {
  /**
   * Режим сборки, передаваемый из окружения.
   * Может быть 'production' или 'development'.
   */
  mode: BuildMode;
  /**
   * Номер порта, передаваемый из окружения.
   * Если не указан, может использоваться порт по умолчанию.
   */
  port: number;
}

/**
 * Интерфейс, представляющий параметры сборки для Webpack.
 */
export interface BuildOptions {
  /**
   * Режим сборки, определяющий конфигурацию для Webpack.
   * Может быть 'production' для финальной сборки или 'development' для сборки в режиме разработки.
   */
  mode: BuildMode;
  /**
   * Объект, содержащий пути к различным директориям и файлам, используемым в процессе сборки.
   */
  paths: BuildPaths;
  /**
   * Логическое значение, указывающее, используется ли режим разработки.
   * `true` для разработки, `false` для финальной сборки.
   */
  isDev: boolean;
  /**
   * Номер порта, на котором будет работать локальный сервер разработки.
   */
  port: number;
}
